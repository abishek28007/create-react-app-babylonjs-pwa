{"version":3,"sources":["ScaledModelWithProgress.js","App.js","serviceWorker.js","index.js"],"names":["ScaledModelWithProgress","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loadProgress","_this2","react_default","a","createElement","Fragment","react_babylonjs_es5","scaleToDimension","props","scaleTo","onLoadProgress","evt","modelLoadProgress","lengthComputable","loaded","total","estimatedFileSize","setState","onModelLoaded","model","position","center","rootUrl","sceneFilename","pluginExtension","fileExtension","rotation","modelRotation","progressRotation","key","name","height","width","depth","scaling","Vector3","setPivotMatrix","Matrix","Translation","setPreTransformMatrix","diffuseColor","progressBarColor","specularColor","Color3","Black","Component","App","className","antialias","adaptToDeviceRatio","canvasId","alpha","Math","PI","beta","radius","target","Zero","minZ","direction","Up","ScaledModelWithProgress_ScaledModelWithProgress","concat","process","FromInts","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.10823332.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Model, Box, StandardMaterial, Mesh } from 'react-babylonjs'\r\nimport { Vector3, Matrix, Color3 } from 'babylonjs';\r\n\r\n// try with later versions of RHL to get hooks working here:\r\n// const [loadProgress, updateProgress] = useState(0)\r\nexport default class ScaledModelWithProgress extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            loadProgress: 0\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Model\r\n                    scaleToDimension={this.props.scaleTo}\r\n                    onLoadProgress={(evt) => {\r\n                        let modelLoadProgress = evt.lengthComputable ?\r\n                            evt.loaded / evt.total :\r\n                            evt.loaded / (this.props.estimatedFileSize * 0.085) /* provided fileSize is not for 'view' manifest, a bad guess often, but generally factor ~0.085 smaller  */\r\n                    \r\n                        this.setState({loadProgress: modelLoadProgress})\r\n                        \r\n                    }}\r\n                    onModelLoaded={(model) => {\r\n                        this.setState({loadProgress: 1})\r\n                        if (this.props.onModelLoaded) {\r\n                            this.props.onModelLoaded(model)\r\n                        }\r\n                    }}\r\n                    position={this.props.center}\r\n                    rootUrl={this.props.rootUrl}\r\n                    sceneFilename={this.props.sceneFilename}\r\n                    pluginExtension={this.props.fileExtension}\r\n                    rotation={this.props.modelRotation}\r\n                />\r\n                {(this.state.loadProgress < 1) &&\r\n                    <Mesh rotation={this.props.progressRotation} position={this.props.center}>\r\n                        <Box key=\"progress\" name=\"boxProgress\" height={this.props.scaleTo/15} width={this.props.scaleTo} depth={this.props.scaleTo/30} scaling={new Vector3(this.state.loadProgress, 1, 1)}\r\n                            position={new Vector3(this.props.scaleTo / 2, 0, this.props.scaleTo/60)}\r\n                            setPivotMatrix={ [ Matrix.Translation(-this.props.scaleTo, 0, 0) ] }\r\n                            setPreTransformMatrix={ [ Matrix.Translation(-this.props.scaleTo / 2, 0, 0) ] }>\r\n                            <StandardMaterial diffuseColor={this.props.progressBarColor} specularColor={Color3.Black()} />\r\n                        </Box>\r\n                        <Box key=\"back\" name=\"boxBack\" height={this.props.scaleTo/15} width={this.props.scaleTo} depth={this.props.scaleTo/30}\r\n                            position={new Vector3(0, 0, this.props.scaleTo/-60)}\r\n                        />\r\n                    </Mesh>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport { Engine, Scene, HemisphericLight, ArcRotateCamera, Skybox } from 'react-babylonjs'\nimport ScaledModelWithProgress from './ScaledModelWithProgress'\nimport './App.css';\nimport { Vector3, Color3  } from 'babylonjs';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"game-canvas\">\n          <Scene>\n            <ArcRotateCamera name=\"camera\" alpha={Math.PI / 2} beta={Math.PI / 3}\n              radius={3} target={Vector3.Zero()} minZ={0.001}\n            />\n            \n            <HemisphericLight name=\"light\" direction={Vector3.Up()} />\n            <ScaledModelWithProgress\n              rootUrl={`${process.env.PUBLIC_URL}/assets/glTF/`} sceneFilename=\"BoomBox.gltf\"\n              scaleTo={1} \n              progressBarColor={Color3.FromInts(255, 165, 0)} center={new Vector3(0, -0.2, 0)}\n            />\n            \n            <Skybox rootUrl={`${process.env.PUBLIC_URL}/assets/skybox/TropicalSunnyDay`} />\n          </Scene>\n        </Engine>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}